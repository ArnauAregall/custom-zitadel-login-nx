<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>tech.aregall</groupId>
    <artifactId>custom-zitadel-login-nx</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <name>custom-zitadel-login-nx</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Plugins -->
        <kubernetes-maven-plugin.version>1.18.1</kubernetes-maven-plugin.version>
        <jkube.maven.plugin.version>1.17.0</jkube.maven.plugin.version>
        <maven-clean-plugin.version>3.4.0</maven-clean-plugin.version>
        <maven-release-plugin.version>3.1.1</maven-release-plugin.version>
        <exec-maven-plugin.version>3.5.0</exec-maven-plugin.version>
        <maven-deploy-plugin.version>3.1.3</maven-deploy-plugin.version>

        <!-- Docker Build Properties -->
        <docker-repository>something.amazonaws.com</docker-repository>
        <docker-image.group>${project.name}</docker-image.group>
        <docker-image.name>${project.name}:${project.version}</docker-image.name>

    </properties>

    <build>
        <plugins>

            <plugin>
                <artifactId>exec-maven-plugin</artifactId>
                <groupId>org.codehaus.mojo</groupId>
                <version>${exec-maven-plugin.version}</version>
                <executions>
                    <!-- Install dependencies using pnpm -->
                    <execution>
                        <id>pnpm-install</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <workingDirectory>${project.basedir}</workingDirectory>
                            <executable>pnpm</executable>
                            <arguments>
                                <argument>install</argument>
                            </arguments>
                        </configuration>
                    </execution>

                    <!-- Fetch Zitadel upstream proto -->
                    <execution>
                        <id>zitadel-upstream-fetch-proto</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <workingDirectory>${project.basedir}</workingDirectory>
                            <executable>sh</executable>
                            <arguments>
                                <argument>./zitadel_upstream_fetch.sh</argument>
                                <argument>proto</argument>
                            </arguments>
                        </configuration>
                    </execution>

                    <!-- Build using nx -->
                    <execution>
                        <id>nx-build</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <workingDirectory>${project.basedir}</workingDirectory>
                            <environmentVariables>
                                <CI/>
                            </environmentVariables>
                            <executable>nx</executable>
                            <arguments>
                                <argument>run-many</argument>
                                <argument>--targets</argument>
                                <argument>build</argument>
                            </arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>docker-buildx</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <workingDirectory>${project.basedir}</workingDirectory>
                            <executable>docker</executable>
                            <arguments>
                                <argument>buildx</argument>
                                <argument>build</argument>
                                <argument>-f</argument>
                                <argument>apps/login/Dockerfile</argument>
                                <argument>-t</argument>
                                <argument>${docker-repository}/${docker-image.group}/${docker-image.name}</argument>
                                <argument>apps/login</argument>
                            </arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>docker-tag-package</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <workingDirectory>${project.basedir}</workingDirectory>
                            <executable>docker</executable>
                            <arguments>
                                <argument>image</argument>
                                <argument>tag</argument>
                                <argument>${docker-repository}/${docker-image.group}/${docker-image.name}</argument>
                                <argument>${docker-repository}/${docker-image.group}/${docker-image.name}</argument>
                            </arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>docker-push-package</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <workingDirectory>${project.basedir}</workingDirectory>
                            <executable>docker</executable>
                            <arguments>
                                <argument>push</argument>
                                <argument>${docker-repository}/${docker-image.group}/${docker-image.name}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${maven-clean-plugin.version}</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>.</directory>
                            <includes>
                                <include>target</include>
                                <include>.nx/</include>
                                <include>.artifacts/</include>
                                <include>node_modules/</include>
                                <include>apps/login/.next/</include>
                                <include>apps/login/node_modules/</include>
                                <include>packages/**/dist/</include>
                                <include>packages/**/node_modules/</include>
                                <include>pnpm-lock.yaml</include>
                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>${maven-release-plugin.version}</version>
                <configuration>
                    <scmCommentPrefix>[skip ci] [maven-release-plugin]</scmCommentPrefix>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven-deploy-plugin.version}</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.eclipse.jkube</groupId>
                <artifactId>kubernetes-maven-plugin</artifactId>
                <version>${kubernetes-maven-plugin.version}</version>
                <configuration>
                    <offline>true</offline>
                    <imagePullPolicy>Always</imagePullPolicy>
                    <resourceDir>${project.basedir}/jkube</resourceDir>
                    <resources>
                        <labels>
                            <all>
                                <provider>fabric8</provider>
                                <group>${project.groupId}</group>
                                <app>${project.artifactId}</app>
                                <version>${project.version}</version>
                            </all>
                        </labels>
                    </resources>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>resource</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
